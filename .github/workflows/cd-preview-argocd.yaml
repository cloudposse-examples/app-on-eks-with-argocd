name: CD â€” Preview Environment Controller via Argo CD

on:
  workflow_call:
    inputs:
      application:
        description: "Name of the application to deploy"
        required: true
        type: string
      runs-on:
        description: "The runner labels on which jobs should run on"
        required: false
        type: string
        default: '["self-hosted", "default"]'
      image:
        description: "Docker Image to deploy"
        required: true
        type: string
      tag:
        description: "Docker Image tag to deploy"
        required: true
        type: string
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: true
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: true
        type: string
      ref:
        description: "The fully-formed ref of the branch or tag that triggered the workflow run"
        required: true
        type: string
      open:
        description: "Pull Request open/close state. Set true if opened"
        required: true
        type: boolean
      labels:
        description: "Pull Request labels"
        required: false
        type: string
        default: "{}"
      toolchain:
        description: "Toolchain ('helm', 'helmfile')"
        required: false
        default: "helm"
        type: string
      path:
        description: "The path where lives the helmfile or helm chart."
        required: true
        type: string
      values_file:
        type: string
        description: Helmfile values file, or helm chart values file
        default: ""
        required: false
      exclusive:
        description: "Deactivate previous GitHub deployments"
        required: false
        type: boolean
        default: true
      env-label:
        description: "YAML formatted {environment}: {label} map"
        type: string
        default: |
          preview: deploy
      synchronously:
        type: boolean
        description: "Wait until ArgoCD successfully apply the changes"
        default: false
      check-retry-count:
        type: string
        description: "Check retry count (for synchronously mode)"
        required: false
        default: "10"
      check-retry-interval:
        type: string
        description: "Check retry interval (in seconds) (for synchronously mode)"
        required: false
        default: "30"
      commit-retry-count:
        type: string
        description: "Commit retry count"
        required: false
        default: "4"
      commit-retry-interval:
        type: string
        description: "Commit retry interval (in seconds)"
        required: false
        default: "10"
      commit-timeout:
        type: string
        description: "Commit timeout (in seconds)"
        required: false
        default: "60"
      custom-deployment-url:
        type: string
        description: "Determines the URL to use for the deployment"
        default: ""
      helm-args:
        type: string
        description: "Additional helm arguments"
        required: false
        default: ""
      ecr-region:
        type: string
        description: "ECR AWS region. Required if `registry` points to ECR."
        required: false
        default: ""
      ecr-iam-role:
        type: string
        description: "IAM Role ARN provide ECR write/read access. Required if `registry` points to ECR."
        required: false
        default: ""

permissions:
  pull-requests: write
  deployments: write
  id-token: write
  contents: read
  statuses: read

jobs:
  # Job to determine which environments need to be deployed or destroyed
  context:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - name: Preview deployments controller
        uses: cloudposse/github-action-preview-environment-controller@v0.11.1
        id: controller
        with:
          labels: ${{ inputs.labels }}
          open: ${{ inputs.open }}
          env-label: ${{ inputs.env-label }}
    outputs:
      namespace: ${{ inputs.ref }}
      labels_env: ${{ steps.controller.outputs.labels_env }}
      # These outputs contain arrays of environments that need to be deployed or destroyed
      deploy_envs: ${{ steps.controller.outputs.deploy_envs }}
      destroy_envs: ${{ steps.controller.outputs.destroy_envs }}

  # Deploy job runs for each environment that needs to be deployed
  #
  # We split these steps into a reusable workflow so that we can wrap 2 nested reusable workflows with a matrix
  # This is required to select an environment with a reusable workflow and pass outputs to the deploy job
  deploy:
    needs: [context]
    if: ${{ needs.context.outputs.deploy_envs != '[]' }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.deploy_envs) }}
    uses: ./.github/workflows/cd-preview-deploy-argocd.yaml
    with:
      application: ${{ inputs.application }}
      toolchain: ${{ inputs.toolchain }}
      path: ${{ inputs.path }}
      values_file: ${{ inputs.values_file }}
      synchronously: ${{ inputs.synchronously }}
      check-retry-count: ${{ inputs.check-retry-count }}
      check-retry-interval: ${{ inputs.check-retry-interval }}
      commit-retry-count: ${{ inputs.commit-retry-count }}
      commit-retry-interval: ${{ inputs.commit-retry-interval }}
      commit-timeout: ${{ inputs.commit-timeout }}
      exclusive: ${{ inputs.exclusive }}
      runs-on: ${{ inputs.runs-on }}
      image: ${{ inputs.image }}
      tag: ${{ inputs.tag }}
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      ref: ${{ inputs.ref }}
      custom-deployment-url: ${{ inputs.custom-deployment-url }}
      helm-args: ${{ inputs.helm-args }}
      environment: ${{ matrix.env }}
      namespace: ${{ needs.context.outputs.namespace }}
      ecr-region: ${{ inputs.ecr-region }}
      ecr-iam-role: ${{ inputs.ecr-iam-role }}
    secrets: inherit

  # Destroy job runs for each environment that needs to be cleaned up
  destroy:
    needs: [context]
    if: ${{ needs.context.outputs.destroy_envs != '[]' }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.destroy_envs) }}
    uses: ./.github/workflows/cd-preview-destroy-argocd.yaml
    with:
      application: ${{ inputs.application }}
      toolchain: ${{ inputs.toolchain }}
      path: ${{ inputs.path }}
      values_file: ${{ inputs.values_file }}
      synchronously: ${{ inputs.synchronously }}
      check-retry-count: ${{ inputs.check-retry-count }}
      check-retry-interval: ${{ inputs.check-retry-interval }}
      commit-retry-count: ${{ inputs.commit-retry-count }}
      commit-retry-interval: ${{ inputs.commit-retry-interval }}
      commit-timeout: ${{ inputs.commit-timeout }}
      runs-on: ${{ inputs.runs-on }}
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      open: ${{ inputs.open }}
      environment: ${{ matrix.env }}
      namespace: ${{ needs.context.outputs.namespace }}
      ecr-region: ${{ inputs.ecr-region }}
      ecr-iam-role: ${{ inputs.ecr-iam-role }}
      ref: ${{ inputs.ref }}
      labels_env: ${{ needs.context.outputs.labels_env }}
    secrets: inherit
