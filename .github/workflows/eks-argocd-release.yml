name: |-
  Release workflow 
  
  Promote existing Docker image to release version, deploy it to EKS `staging` and then `production` environments.  
  
  ### Usage 
  
  Create in your repo  __`.github/workflows/eks-argocd-release.yaml`__
  
  ```yaml
    name: Release
    on:
      release:
        types: [published]
    
    permissions:
      id-token: write
      contents: write
    
    jobs:
      perform:
        uses: ./.github/workflows/eks-argocd-release.yml
        with:
          organization: "$\{\{ github.event.repository.owner.login \}\}"
          repository: "$\{\{ github.event.repository.name \}\}"
          version: $\{\{ github.event.release.tag_name \}\}
        secrets:
          github-private-actions-pat: "$\{\{ secrets.ARGOCD_GITHUB_NONPROD \}\}"
          registry: "$\{\{ secrets.ECR_REGISTRY \}\}"
          secret-outputs-passphrase: "$\{\{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE \}\}"
          ecr-region: "$\{\{ secrets.ECR_REGION \}\}"
          ecr-iam-role: "$\{\{ secrets.ECR_IAM_ROLE \}\}"
  ```

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      version:
        description: "Release version tag"
        required: false
        default: ${{ github.event.release.tag_name }}
        type: string
      toolchain:
        description: "Toolchain ('helm', 'helmfile')"
        required: false
        default: "helmfile"
        type: string
      path:
        description: "The path where lives the helmfile or helm chart."
        required: true
        type: string
      values_file:
        type: string
        description: Helmfile values file, or helm chart values file
        default: ""
        required: false
      tests_enabled:
        description: "Enable CI Test Stage"
        type: boolean
        default: true
        required: false
      synchronously:
        type: boolean
        description: "Wait until ArgoCD successfully apply the changes"
        default: true
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      registry:
        description: "ECR ARN"
        required: true
      github-private-actions-pat:
        description: "Github PAT allow to pull private repos"
        required: true
      ecr-region:
        description: "ECR AWS region"
        required: true
      ecr-iam-role:
        description: "IAM Role ARN provide ECR write/read access"
        required: true

permissions:
  id-token: write
  contents: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  ci:
    uses: ./.github/workflows/workflow-ci-dockerized-app-promote.yml
    with:
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      version: ${{ inputs.version }}
    secrets:
      ecr-region: ${{ secrets.ecr-region }}
      ecr-iam-role: ${{ secrets.ecr-iam-role }}
      registry: ${{ secrets.registry }}
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}

  cd-staging:
    name: cd / staging
    uses: ./.github/workflows/workflow-cd-argocd.yml
    needs: [ ci ]
    with:
      image: ${{ needs.ci.outputs.image }}
      tag: ${{ needs.ci.outputs.tag }}
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      environment: staging
      path: ${{ inputs.path }}
      toolchain: ${{ inputs.toolchain }}
      values_file: ${{ inputs.values_file }}
      synchronously: ${{ inputs.synchronously }}
    secrets:
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}
      github-private-actions-pat: ${{ secrets.github-private-actions-pat }}

  cd-production:
    name: cd / production
    uses: ./.github/workflows/workflow-cd-argocd.yml
    needs: [ ci, cd-staging ]
    with:
      image: ${{ needs.ci.outputs.image }}
      tag: ${{ needs.ci.outputs.tag }}
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      environment: production
      path: ${{ inputs.path }}
      toolchain: ${{ inputs.toolchain }}
      values_file: ${{ inputs.values_file }}
      synchronously: ${{ inputs.synchronously }}
    secrets:
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}
      github-private-actions-pat: ${{ secrets.github-private-actions-pat }}
